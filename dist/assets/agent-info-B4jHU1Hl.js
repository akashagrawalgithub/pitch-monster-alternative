import"./modulepreload-polyfill-B5Qt9EMX.js";class i{constructor(){console.log("AgentInfoPage constructor called"),this.agentData=null,this.initializeAuth(),this.initializeEventListeners(),this.loadAgentInfo()}async initializeAuth(){try{const e=localStorage.getItem("authenticated"),t=localStorage.getItem("accessToken");if(!e||!t){window.location.href="/login.html";return}const o=await fetch("/auth/check",{method:"GET",headers:{Authorization:`Bearer ${t}`}});if(!o.ok){localStorage.clear(),window.location.href="/login.html";return}const n=await o.json();this.loadUserData(n.user)}catch(e){console.error("Auth check failed:",e),localStorage.clear(),window.location.href="/login.html"}}initializeEventListeners(){document.getElementById("dashboardBtn").addEventListener("click",e=>{e.preventDefault(),window.location.href="/index.html"}),document.getElementById("logoutBtn").addEventListener("click",e=>{e.preventDefault(),this.handleLogout()}),document.getElementById("pastAnalysisBtn").addEventListener("click",e=>{e.preventDefault(),window.location.href="/past-conversations.html"}),document.getElementById("startRecordingBtn").addEventListener("click",()=>{console.log("Start Recording button clicked"),this.startRecording()})}loadUserData(e){const t=e.email||"User",o=e.name||t.split("@")[0],n=o.substring(0,2).toUpperCase();document.getElementById("userName").textContent=o,document.getElementById("userAvatar").textContent=n}async loadAgentInfo(){const e=localStorage.getItem("selectedAgentType");if(console.log("Loading agent info for type:",e),!e){console.log("No agent type found, redirecting to index"),window.location.href="/index.html";return}try{const t=localStorage.getItem("accessToken");if(!t){console.error("No access token found"),window.location.href="/login.html";return}const o=await fetch("/api/db/get_agent_by_key",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`},body:JSON.stringify({agent_key:e})});if(!o.ok)throw new Error(`HTTP error! status: ${o.status}`);const n=await o.json();if(!n.success||!n.agent){console.error("Failed to load agent:",n.error),window.location.href="/index.html";return}const a=n.agent;console.log("Agent data:",a),document.title=a.title,document.getElementById("agentTitle").textContent=a.title,document.getElementById("breadcrumbTitle").textContent=a.title,document.getElementById("roleplayType").textContent=a.type,document.getElementById("guidelinesText").textContent=a.guidelines;const r=document.getElementById("roleplayIcon");r&&(r.innerHTML=a.icon,r.className=`info-icon ${a.iconClass}`)}catch(t){console.error("Error loading agent from API:",t),this.showError("Failed to load agent information. Please try again later.")}}showError(e){const t=document.querySelector(".main-content");t&&(t.innerHTML=`
                    <div class="error-container" style="text-align: center; padding: 60px 20px; color: #ef4444;">
                        <div class="material-icons" style="font-size: 64px; margin-bottom: 24px;">error_outline</div>
                        <h1 style="font-size: 24px; margin-bottom: 16px; color: #1e293b;">Error Loading Agent</h1>
                        <p style="font-size: 16px; margin-bottom: 24px; color: #64748b;">${e}</p>
                        <div style="display: flex; gap: 12px; justify-content: center;">
                            <button onclick="location.reload()" style="padding: 12px 24px; background: #3b82f6; color: white; border: none; border-radius: 8px; cursor: pointer; font-weight: 500;">
                                Try Again
                            </button>
                            <button onclick="window.location.href='/index.html'" style="padding: 12px 24px; background: #f1f5f9; color: #64748b; border: 1px solid #e2e8f0; border-radius: 8px; cursor: pointer; font-weight: 500;">
                                Back to Dashboard
                            </button>
                        </div>
                    </div>
                `)}startRecording(){console.log("Starting recording...");const e=localStorage.getItem("selectedAgentType");e?(console.log("Redirecting to conversation page with agent type:",e),window.location.href="/conversation.html"):(console.log("No agent type found, redirecting to index"),window.location.href="/index.html")}async handleLogout(){try{localStorage.removeItem("authenticated"),localStorage.removeItem("userEmail"),localStorage.removeItem("userName"),localStorage.removeItem("accessToken"),window.location.href="/login.html"}catch(e){console.error("Logout failed:",e),window.location.href="/login.html"}}}document.addEventListener("DOMContentLoaded",function(){console.log("DOM loaded, initializing AgentInfoPage"),new i});
